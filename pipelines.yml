trigger:
- main

pool:
  name: 'New-pool'   # your self-hosted agent pool

variables:
  IMAGE_NAME: nodeapp
  IMAGE_TAG: $(Build.BuildId)
  ACR_NAME: azanacr-f7eabjd2gsczcke4
  ACR_LOGIN_SERVER: azanacr-f7eabjd2gsczcke4.azurecr.io

stages:
- stage: Build
  displayName: Build & Push
  jobs:
  - job: BuildDocker
    steps:
    - script: |
        echo $(ACR_PASSWORD) | docker login $(ACR_LOGIN_SERVER) \
          -u $(ACR_USERNAME) --password-stdin

        echo "Building Docker image..."
        docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) .

        echo "Pushing image with build tag..."
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG)

        echo "Tagging as latest..."
        docker tag $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) \
          $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):latest
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):latest
      displayName: 'Build & Push to ACR'
      env:
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)

- stage: Deploy
  displayName: Deploy to VM
  dependsOn: Build
  jobs:
  - job: DeployToVM
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'sshconnection'
        commands: |
          cd ~/my-node-app

          echo "Logging in to ACR..."
          echo $ACR_PASSWORD | docker login $(ACR_LOGIN_SERVER) \
            -u $ACR_USERNAME --password-stdin

          echo "Stopping old containers for this project..."
          docker-compose down || true

          echo "Cleaning up unused images..."
          docker image prune -af || true

          echo "Pulling latest image..."
          docker-compose pull

          echo "Starting services..."
          docker-compose up -d
      env:
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)
        ACR_LOGIN_SERVER: $(ACR_LOGIN_SERVER)
