trigger:
- main

pool:
  name: 'New-pool'   # tumhara self-hosted agent pool ka naam

variables:
- group: variable group   # tumhara variable group ka naam

stages:
# -------------------- BUILD STAGE --------------------
- stage: Build
  displayName: Build & Push
  jobs:
  - job: BuildDocker
    steps:
    - script: |
        echo "Logging in to Azure with Service Principal..."
        az login --service-principal --username $(AZURE_CLIENT_ID) --password $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
        echo "Logging in to ACR..."
        az acr login -n $(ACR_NAME)

        echo "Building Docker image..."
        docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) .

        echo "Pushing image with build tag..."
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG)

        echo "Tagging as latest..."
        docker tag $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) \
          $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):latest
        docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):latest
      displayName: 'Build & Push to ACR'

# -------------------- DEPLOY STAGE --------------------
# ================== DEPLOY STAGE ==================
- stage: Deploy
  displayName: Deploy to VM
  dependsOn: Build
  jobs:
  - job: DeployToVM
    displayName: SSH Deploy Job
    steps:
    - task: SSH@0
      displayName: Deploy via SSH
      inputs:
        sshEndpoint: 'sshconnection'   # Must match the service connection name
        commands: |
          echo "=== Moving into project directory ==="
          cd /home/azan2/my-node-app
          pwd
          ls -la

          echo "=== Docker Compose version check ==="
          docker-compose version || docker compose version

          echo "=== Azure Login ==="
          az login --service-principal \
            --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

          echo "=== ACR Login ==="
          az acr login -n $ACR_NAME

          echo "=== Stop old containers ==="
          docker-compose down || docker compose down || true

          echo "=== Cleanup unused images ==="
          docker image prune -af || true

          echo "=== Pull latest image ==="
          docker-compose pull || docker compose pull

          echo "=== Start containers ==="
          docker-compose up -d || docker compose up -d
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
        ACR_NAME: $(ACR_NAME)
