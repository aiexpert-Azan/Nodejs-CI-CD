trigger:
- main

pool:
  name: 'New-pool'  # since youâ€™re using self-hosted agent

variables:
  IMAGE_NAME: nodeapp
  IMAGE_TAG: $(Build.BuildId)

stages:
- stage: Build
  jobs:
  - job: BuildDocker
    steps:
    - script: |
        echo "Logging in to ACR..."
        docker login azanacr-f7eabjd2gsczcke4.azurecr.io \
          -u $(ACR_USERNAME) -p $(ACR_PASSWORD)

        echo "Building and pushing image..."
        docker build -t azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) .
        docker push azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)

        echo "Tagging latest..."
        docker tag azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) \
          azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):latest
        docker push azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):latest
      displayName: 'Build & Push Docker Image'

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployToVM
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'sshconnection'
        commands: |
          cd ~/my-node-app
          echo "Logging in to ACR..."
          docker login azanacr-f7eabjd2gsczcke4.azurecr.io \
            -u $(ACR_USERNAME) -p $(ACR_PASSWORD)

          echo "Stopping old containers for this project..."
          docker-compose down || true

          echo "Cleaning up unused images..."
          docker image prune -af || true

          echo "Pulling latest image..."
          docker-compose pull

          echo "Starting services..."
          docker-compose up -d
