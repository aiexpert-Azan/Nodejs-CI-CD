trigger:
- main

pool:
  name: 'New-pool'   # self-hosted agent

variables:
- group: variable group   # link your ACR credentials here
- name: IMAGE_NAME
  value: nodeapp
- name: IMAGE_TAG
  value: $(Build.BuildId)

stages:
# -------------------------
# Build & Push Stage
# -------------------------
- stage: Build
  jobs:
  - job: BuildDocker
    steps:
    - script: |
        echo "Logging in to ACR..."
        echo "$ACR_PASSWORD" | docker login azanacr-f7eabjd2gsczcke4.azurecr.io \
          -u "$ACR_USERNAME" --password-stdin

        echo "Building and pushing image..."
        docker build -t azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) .
        docker push azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)

        echo "Tagging latest..."
        docker tag azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) \
          azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):latest
        docker push azanacr-f7eabjd2gsczcke4.azurecr.io/$(IMAGE_NAME):latest
      displayName: 'Build & Push Docker Image'
      env:
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)

# -------------------------
# Deploy Stage
# -------------------------
- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployToVM
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'sshconnection'
        runOptions: inline
        inline: |
          echo "===== Debug Info ====="
          whoami
          id
          groups
          ls -l /var/run/docker.sock
          echo "======================"

          cd ~/my-node-app

          echo "Logging in to ACR securely..."
          echo "$ACR_PASSWORD" | docker login azanacr-f7eabjd2gsczcke4.azurecr.io \
            -u "$ACR_USERNAME" --password-stdin

          echo "Stopping old containers for this project..."
          docker-compose down || true

          echo "Cleaning up unused images..."
          docker image prune -af || true

          echo "Pulling latest image..."
          docker-compose pull

          echo "Starting services..."
          docker-compose up -d
      env:
        ACR_USERNAME: $(ACR_USERNAME)
        ACR_PASSWORD: $(ACR_PASSWORD)
